apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-open-liberty
  namespace: cp4i
spec:
  description: >-
    s2i-open-liberty task clones a Git repository and builds and pushes a container
    image using S2I and a Open Liberty Java builder image.
  params:
    - default: 21.0.0.12-java11
      description: The tag of open liberty s2i image (https://hub.docker.com/r/openliberty/open-liberty-s2i)
      name: VERSION
      type: string
    - default: .
      description: The location of the path to run s2i from
      name: PATH_CONTEXT
      type: string
    - default: 'true'
      description: >-
        Verify the TLS on the registry endpoint (for push/pull to a non-TLS
        registry)
      name: TLSVERIFY
      type: string
    - default: ''
      description: Additional Maven arguments
      name: MAVEN_ARGS_APPEND
      type: string
    - default: ''
      description: The base URL of a mirror used for retrieving artifacts
      name: MAVEN_MIRROR_URL
      type: string
    - default: ''
      description: When true, applicaton binaries will be copied to apps instead of dropins
      name: DEPLOY_TO_APPS
      type: string
    - description: Location of the repo where image has to be pushed
      name: IMAGE
      type: string
    - default: >-
        registry.redhat.io/rhel8/buildah@sha256:99cae35f40c7ec050fed3765b2b27e0b8bbea2aa2da7c16408e2ca13c60ff8ee
      description: The location of the buildah builder image.
      name: BUILDER_IMAGE
      type: string
    - default: ''
      description: When provided, s2i will use incremental builds using this tag, which will enable caching the maven artifacts between builds
      name: INCREMENTAL_BUILD_TAG
      type: string
    - default: NA
      name: commit_id
      type: string
    - default: NA
      name: commit_message
      type: string
    - default: NA
      name: commit_user
      type: string
  results:
    - description: Digest of the image just built.
      name: IMAGE_DIGEST
  steps:
    - args:
        - |-
          echo "MAVEN_ARGS=verify -Popenshift" > env-file
          # Support sonarqube
          echo "SONAR_USER_HOME=/tmp" >> env-file

          [[ '$(params.DEPLOY_TO_APPS)' != "" ]] &&
            echo "DEPLOY_TO_APPS=$(params.DEPLOY_TO_APPS)" >> env-file

          [[ '$(params.MAVEN_ARGS_APPEND)' != "" ]] &&
            echo "MAVEN_ARGS_APPEND=$(params.MAVEN_ARGS_APPEND)" >> env-file

          [[ '$(params.MAVEN_MIRROR_URL)' != "" ]] &&
            echo "MAVEN_MIRROR_URL=$(params.MAVEN_MIRROR_URL)" >> env-file

          echo "Generated Env file"
          echo "------------------------------"
          cat env-file
          echo "------------------------------"
      command:
        - /bin/sh
        - '-c'
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:637c15600359cb45bc01445b5e811b6240ca239f0ebfe406b50146e34f68f631
      name: gen-env-file
      resources: {}
      volumeMounts:
        - mountPath: /env-params
          name: envparams
      workingDir: /env-params
    - image: $(params.BUILDER_IMAGE)
      name: check-exists-incremental
      resources: {}
      volumeMounts:
        - mountPath: /env-params
          name: envparams
      script: |-
        if [ -n "$(params.INCREMENTAL_BUILD_TAG)" ] && buildah inspect --type image $(params.INCREMENTAL_BUILD_TAG); then
          echo "Incremental image $(params.INCREMENTAL_BUILD_TAG) exists"
          touch /env-params/incremental-tag-exists
        fi
    - script: |-
        if [ -f "/env-params/incremental-tag-exists" ]; then
          s2i build $(params.PATH_CONTEXT) openliberty/open-liberty-s2i:$(params.VERSION) --image-scripts-url image:///usr/local/s2i \
            --as-dockerfile /gen-source/Dockerfile.gen --environment-file /env-params/env-file \
            --incremental $(params.INCREMENTAL_BUILD_TAG)
        else
          s2i build $(params.PATH_CONTEXT) openliberty/open-liberty-s2i:$(params.VERSION) --image-scripts-url image:///usr/local/s2i \
            --as-dockerfile /gen-source/Dockerfile.gen --environment-file /env-params/env-file
        fi
      image: >-
        registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:637c15600359cb45bc01445b5e811b6240ca239f0ebfe406b50146e34f68f631
      name: generate
      resources: {}
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
        - mountPath: /env-params
          name: envparams
      workingDir: $(workspaces.source.path)
    - script: |-
        if [ -z "$(params.INCREMENTAL_BUILD_TAG)" ]; then
          buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) --layers \
            --label git_commit=$(params.commit_id) \
            --label git_message=$(params.commit_message) \
            --label git_user=$(params.commit_user) \
            -f /gen-source/Dockerfile.gen -t $(params.IMAGE) .
        else
          buildah bud --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) --layers \
            --label git_commit=$(params.commit_id) \
            --label git_message=$(params.commit_message) \
            --label git_user=$(params.commit_user) \
            -f /gen-source/Dockerfile.gen -t $(params.IMAGE) -t $(params.INCREMENTAL_BUILD_TAG) . 
        fi
      image: $(params.BUILDER_IMAGE)
      name: build
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
    - command:
        - buildah
        - push
        - '--storage-driver=vfs'
        - '--tls-verify=$(params.TLSVERIFY)'
        - '--digestfile=$(workspaces.source.path)/image-digest'
        - $(params.IMAGE)
        - 'docker://$(params.IMAGE)'
      image: $(params.BUILDER_IMAGE)
      name: push
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - script: |-
        if [ -n "$(params.INCREMENTAL_BUILD_TAG)" ]; then
          buildah push --storage-driver=vfs --tls-verify=$(params.TLSVERIFY) $(params.INCREMENTAL_BUILD_TAG) docker://$(params.INCREMENTAL_BUILD_TAG)
        fi
      image: $(params.BUILDER_IMAGE)
      name: push-incremental
      resources: {}
      volumeMounts:
        - mountPath: /var/lib/containers
          name: varlibcontainers
      workingDir: $(workspaces.source.path)
    - image: $(params.BUILDER_IMAGE)
      name: digest-to-results
      resources: {}
      script: >-
        cat $(workspaces.source.path)/image-digest | tee
        /tekton/results/IMAGE_DIGEST
  volumes:
    - emptyDir: {}
      name: varlibcontainers
    - emptyDir: {}
      name: gen-source
    - emptyDir: {}
      name: envparams
  workspaces:
    - mountPath: /workspace/source
      name: source
